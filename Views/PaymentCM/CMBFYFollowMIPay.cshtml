@model FP.Models.FilterModel
@using FP.Manager
@{
    ViewBag.Title = Model.BtnType + " Mobilization Incentive Payment (CM)";
}

<style>
    .closed {
        border: none;
        padding: 5px 12px;
        background: #009A3F;
        color: #fff;
        border-radius: 100%;
    }

    .modal-dialog {
        max-width: 900px !important;
    }

    .benefit {
        display: flex;
        gap: 10px;
    }

    .table th {
        font-size: 14px;
        background: #fff;
    }

    .table td {
        font-size: 13px;
    }

    .dataTables_filter, .dataTables_length {
        margin-bottom: 15px;
    }
    /*  .actives2 {
        color: #009CFF !important;
        background: #FFFFFF;
        border-color: #009CFF;
    }*/
</style>
<div class="breadcrumb">
    <h2>@ViewBag.Title</h2>
    <strong id="div-download"></strong>
</div>

<div class="container-fluid pt-4 px-4">
    <fieldset class="border rounded-3 p-3">
        <legend class="float-none w-auto px-2">Search By</legend>
        @using (Html.BeginForm("GetCMMRPBFYFollowList", "PaymentCM", FormMethod.Get, new { @class = "", @id = "formid", role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate" }))
        {
            <div class="row g-4">
                <div class="col-sm-12">
                    <div class="bg-light rounded h-100 p-4">
                        <div class="row mb-3">
                            @Html.HiddenFor(model => model.TypeLayer)
                            <div class="col-sm-2">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.DistrictId, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.BlockId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.BlockId, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.BlockId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @if (CommonModel.RoleNameCont.MRP == MvcApplication.CUser.Role || CommonModel.RoleNameCont.CC == MvcApplication.CUser.Role || CommonModel.RoleNameCont.Admin == MvcApplication.CUser.Role)
                            {
                                <div class="col-sm-2">
                                    <div class="position-relative form-group">
                                        @Html.LabelFor(model => model.CLFId, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(m => m.CLFId, new List<SelectListItem>(), null, new { @class = "form-select " })
                                        @Html.ValidationMessageFor(model => model.CLFId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            <div class="col-sm-2">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.Month, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.Year, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <br />
                                <div class="mb-3">
                                    <span class="check-spacer">
                                        <input type="submit" name="btnfilter" id="btnfilter" class="btn btn-info" value="Filter" />
                                    </span>&nbsp;&nbsp;&nbsp;
                                    <span class="check-spacer">
                                        <a href="~/PaymentCM/CMBFYFollowMIPay?TypeLayer=@Model.TypeLayer" class="btn btn-warning"><i class="fa-solid fa-rotate-right"></i></a>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </fieldset>

    <div class="row">

        <div class="col=md-6"></div>
        <div class="col=md-6"></div>
        <div class="col=md-6"></div>
        <div class="col-md-12">
            <div id="subdata"></div>
            <div>
                <label>Selected CMs : </label>
                <textarea id="cmNames" name="cmNames" class="form-control" cols="2" rows="2" readonly></textarea>
            </div>
            <div>
                <label>Comments : </label>
                 <textarea id="ApprovedRemarks" name="ApprovedRemarks" class="form-control" cols="2" rows="4" required></textarea>
            </div>
           
            <br />
            <div class="mb-3 offset-10">
                <span class="check-spacer">
                    <input type="submit" name="btnsubmit" id="btnsubmit" class="btn btn-info" value="@Model.BtnType" />
                </span>&nbsp;&nbsp;&nbsp;
            </div>
        </div>

    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>
    <script src="~/Scripts/JS/BEYDetails.js"></script>

    <script>
        $(document).ready(function () {

            GetYearList("Year", 0, 0);
            GetMonthList("Month", 0, 0);
            GetDistrict("DistrictId", 0);
            $('#DistrictId').change(function () {
                GetBlock("BlockId", 0, $(this).val());
            });
            $('#BlockId').change(function () {
                GetCLF("CLFId", 0, $('#DistrictId').val(), $(this).val());
            });
            $('#CLFId').change(function () {
                GetPanchayat("PanchayatId", 0, $('#DistrictId').val(), $('#BlockId').val(), $(this).val());
            });

            //$('#PanchayatId').change(function () {
            //    GetVillage("VOId", 0, $('#DistrictId').val(), $('#BlockId').val(), $('#CLFId').val(), $(this).val());
            //});
            /* Role Wise */
            BindRolewise("DistrictId", "BlockId", "CLFId");//, "PanchayatId", "VOId"

            setTimeout(BindData, 2000);
            CheckUnchecked();

            $("#formid").submit(function (e) {
                e.preventDefault();
                BindData();
            });
            $("#btnsubmit").click(function (e) {
                e.preventDefault();
                CUData();
            });

        });

        function BindData() {
            $("#subdata").html('');
            var filtermodel = new Object();
            filtermodel.DistrictId = $('#DistrictId').val() == '' ? '' : $('#DistrictId').val();
            filtermodel.BlockId = $('#BlockId').val() == '' ? '' : $('#BlockId').val();
            filtermodel.CLFId = $('#CLFId').val() == '' ? '' : $('#CLFId').val();
            //filtermodel.PanchayatId = $('#PanchayatId').val() == '' ? '' : $('#PanchayatId').val();
            //filtermodel.VoId = $('#VOId').val() == '' ? '' : $('#VOId').val();
            filtermodel.Year = $('#Year').val() == '' ? '' : $('#Year').val();
            filtermodel.Month = $('#Month').val() == '' ? '' : $('#Month').val();
            filtermodel.TypeLayer = $('#TypeLayer').val() == '' ? 0 : $('#TypeLayer').val();
            var formData = $('#formid').serialize();

            $.ajax({
                type: "GET",
                url: document.baseURI + "/PaymentCM/GetCMMRPBFYFollowList",
                data: filtermodel,//JSON.stringify({ 'Roles': '' }),
                //cache: false,
                success: function (res) {
                    if (res.IsSuccess) {
                        $("#subdata").html(res.Data);

                        if ($.fn.dataTable.isDataTable('#tbl')) {
                            $("#tbl").dataTable().fnDestroy();
                        }
                        table = $('#tbl').DataTable({
                            //scrollY: "400px",
                            //scrollX: true,
                            //scrollCollapse: true,
                            paging: false,
                            //pageLength: 100,
                            order: [[1, 'asc']],
                            fixedColumns: {
                                leftColumns: 1,
                                rightColumns: 1
                            },
                            buttons: [{
                                extend: 'excel', text: '<span><i class="fa fa-download"></i>Export</span>', title: 'Beneficiary Lists',//$('#IDDistrict option:selected').text() +
                                className: 'btn btn-primary button-icon mr-3 mt-1 mb-1',
                                filename: 'Beneficiary List',
                                exportOptions: { modifier: { page: 'all' } }
                            }],
                        });
                        $('.dataTables_filter input[type="search"]').css(
                            { 'width': '500px', 'display': 'inline-block' }
                        );
                        $('#div-download').empty();
                        table.buttons().container().appendTo($('#div-download'));

                        CheckUnchecked();
                    }
                    else {
                        $("#subdata").html(res.Data);
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    //Do To Message display
                }
            });
        }

        function CheckUnchecked(cur) {
            debugger;
            var names = '';
            if ($(cur).attr('id') == 'selectAll') {
                $('#tbl tbody tr .check').each(function (i, item) {
                    $(item).prop('checked', $(cur).prop('checked'));
                    if ($(cur).prop('checked')) {
                        names += $(item).attr('data-cmname') + ', ';
                    }
                });
            } else {
                var isallChecked = true;
                $('#tbl tbody tr .check').each(function (i, item) {
                    if (!$(item).prop('checked')) {
                        isallChecked = false;
                        return;
                    } else {
                        names += $(item).attr('data-cmname') + ', ';
                    }
                });
                $('#selectAll').prop('checked', isallChecked);
            }
            $('#cmNames').val(names);
        }

        function CUData() {
          debugger;
            var isvalid = $("#formid").valid();
            var IsCheck = true; var ApprovedRemarks = $('textarea[id=ApprovedRemarks]').val();
            if ('@CommonModel.RoleNameCont.MRP' == '@MvcApplication.CUser.Role' || '@CommonModel.RoleNameCont.CC' == '@MvcApplication.CUser.Role' || '@CommonModel.RoleNameCont.Admin' == '@MvcApplication.CUser.Role') {
                if ($('#DistrictId').val() == '' || $('#BlockId').val() == ''
                    || $('#CLFId').val() == '' || $('#Month').val() == '' || $('#Year').val() == ''
                ) {
                    toastr.error("Error", "Please Select District, Block & Cluster");
                    return false;
                }
            }
            else {
                if ($('#DistrictId').val() == '' || $('#BlockId').val() == ''
                    || $('#Month').val() == '' || $('#Year').val() == ''
                ) {
                    toastr.error("Error", "Please Select District, Block");
                    return false;
                }
            }
            if (ApprovedRemarks =='') {
               toastr.error("Error", "Enter the Remarks.");
               return false;
           }

          jQuery.event.trigger("ajaxStart");
          //var vl = $.validator.unobtrusive.parse("#formid");
          //var Isvalid= $("#formid").validate();//CreatePlanformid

         // IsCheck = $('#BFYID_fk').val() == '' ? false : true;
            var tblpushdata = []; var modellist = [];
          var formData = new FormData();
            formData.append('DistrictId', $('#DistrictId').val());
            formData.append('BlockId', $('#BlockId').val());
            formData.append('ClusterId', $('#CLFId').val());
            formData.append('Year', $('#Year').val());
            formData.append('Month', $('#Month').val());
            formData.append('ApprovedRemarks', ApprovedRemarks);
            formData.append('TypeLayer', $('#TypeLayer').val());

              let table2 = $('#tbl').DataTable();
            table2.$('input[name=check]').each(function (i, row) {
                debugger;
                  var cmmipid = $(row).attr('data-cmmipid');
                 // var bfyid = $(row).attr('data-bfyid');
               //   var folloupid = $(row).attr('data-folloupid');
                  var disid = $(row).attr('data-disid');
                  var blckid = $(row).attr('data-blckid');
                  var clfid = $(row).attr('data-clfid');
                  var pchytid = $(row).attr('data-pchytid');
                  var vorgid = $(row).attr('data-vorgid');
                //var ReportedByUserId = $(row).attr('data-reportedbyuserid');
                var cmId = $(row).attr('data-cmid');
                var Guidempty='@Guid.Empty'

                  debugger;
                if (cmId != '' && cmId != '@Guid.Empty' && cmId != undefined) {
                      if ($(this).is(':checked')) {
                          tblpushdata.push({
                              CMMIPId_pk: cmmipid == "" ? '@Guid.Empty' : cmmipid,
                              CMId: cmId,
                              BFYId_fk: Guidempty,
                              FollowupId_fk: Guidempty,
                              DistrictId_fk: disid,
                              BlockId_fk: blckid,
                              ClusterId_fk: clfid,
                              PanchayatId_fk: pchytid,
                              VoId_fk: vorgid,
                              //ReportedByUserId: ReportedByUserId,
                              PlanApprove: '@Convert.ToInt16(Enums.eTypeApprove.Approve)',
                          });
                      }
                  }
          });

            if (tblpushdata.length == 0) {
                toastr.error("Error", "Please choice at least one.");
                return false;
            }
            formData.append('CMMIPModel', JSON.stringify(tblpushdata));
            //modellist.push(JSON.stringify(tblpushdata));

          if (isvalid && IsCheck) {
             // document.getElementById("btnsubmit").disabled = true;
              //var formData = $('#formid').serialize();

              $.ajax({
                  url: document.baseURI + "/PaymentCM/PostDataCMMIPay",
                  type: "Post",
                  //data: JSON.stringify(model),
                  contentType: "application/json; charset=utf-8",
                  data: formData,
                  //contentType: "application/json; charset=utf-8",
                  dataType: "json",
                  // processData: false, contentType: false,
                  cache: false,
                  contentType: false,
                  processData: false,
                  //data: JSON.stringify(model),
                  success: function (resp) {
                      if (resp.StatusType == "success") {
                          toastr.success("Success", resp.Message);
                          //$("#followupformid")[0].reset();
                          BindData();
                      }
                      else {
                          toastr.error("Error", resp.Message);
                          document.getElementById("btnsubmit").disabled = false;
                          jQuery.event.trigger("ajaxStop");
                      }
                  },
                  error: function (req, error) {
                      if (error === 'error') { error = req.statusText; }
                      var errormsg = 'There was a communication error: ' + error;
                      toastr.error("Error", errormsg);
                      document.getElementById("btnsubmit").disabled = false;
                      jQuery.event.trigger("ajaxStop");
                      return false;
                  }
              });
          }
          else {
              toastr.error('Error', "Please fill all required fields!!");
              jQuery.event.trigger("ajaxStop");
              return false;
          }

      }

    </script>
}


