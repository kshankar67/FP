@model FP.Models.CMFollowupModel
@using FP.Manager
@{

}
<style>
    .table th {
        font-size: 14px;
        background: #fff;
    }

    .table td {
        font-size: 13px;
    }

    .dataTables_filter, .dataTables_length {
        margin-bottom: 15px;
    }

    .actives2 {
        color: #009CFF !important;
        background: #FFFFFF;
        border-color: #009CFF;
    }
</style>
<div class="breadcrumb">
    <h2>Beneficiary Lists (Follow up)</h2>
    <p><a href="~/Beneficiary/Beneficiary?HindiEng=2">Beneficiary </a> / Beneficiary Lists</p>
</div>
<div class="container-fluid pt-4 px-4">
    <fieldset class="border rounded-3 p-3">
        <legend class="float-none w-auto px-2">Search By</legend>
        @using (Html.BeginForm("GetBFYFollowList", "Beneficiary", FormMethod.Get, new { @class = "", @id = "formid", role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate" }))
        {
            <div class="row g-4">
                <div class="col-sm-12">
                    <div class="bg-light rounded h-100 p-4">
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.DistrictId, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.BlockId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.BlockId, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.BlockId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.CLFId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.CLFId, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.CLFId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.PanchayatId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.PanchayatId, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.PanchayatId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-3">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.VOId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.VOId, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.VOId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.CMID, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.CMID, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.CMID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.Year, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="position-relative form-group">
                                    @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.Month, new List<SelectListItem>(), null, new { @class = "form-select " })
                                    @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <span class="check-spacer">
                                <input type="submit" name="btnsubmit" id="btnsubmit" class="btn btn-info" value="Filter" />
                            </span>&nbsp;&nbsp;&nbsp;
                            <span class="check-spacer">
                                <a href="~/Beneficiary/BFYFollow" class="btn btn-warning"><i class="fa fa-refresh"></i></a>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        }
    </fieldset>

    <div class="row">
        <div class="col=md-12" id="div-download"></div>
        <div class="col=md-6"></div>
        <div class="col=md-6"></div>
        <div class="col=md-6"></div>
        <div class="col-md-12">
            <div id="subdata"></div>
        </div>
    </div>
</div>


<div class="modal fade" id="myModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="myModalTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        @using (Html.BeginForm("AddFollowup", "Beneficiary", FormMethod.Post, new { @class = "", @id = "followupformid", role = "form", autocomplete = "off", enctype = "multipart/form-data", noValidate = "novalidate" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.FollowupID_pk)
            @Html.HiddenFor(m => m.BFYID_fk)
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="myModalTitle">Follow-up Line-Listing</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row g-1">
                        <div class="col-sm-12">
                            <div class="bg-light rounded h-100 p-2">
                                <div class="row mb-3">
                                    <div class="col-sm-12">
                                        <div class="position-relative form-group">
                                            <strong class="text-secondary">@FP.Models.DisplayFollowBFY.BeneficiaryRegID :</strong>
                                            <strong class="text-success" id="stBFYRegID"></strong>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="position-relative form-group">
                                            @Html.LabelFor(model => model.FYear, htmlAttributes: new { @class = "control-label" })<em>*</em>
                                            @Html.DropDownListFor(m => m.FYear, new List<SelectListItem>(), null, new { @class = "form-select " })
                                            @Html.ValidationMessageFor(model => model.FYear, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="position-relative form-group">
                                            @Html.LabelFor(model => model.FMonth, htmlAttributes: new { @class = "control-label" })<em>*</em>
                                            @Html.DropDownListFor(m => m.FMonth, new List<SelectListItem>(), null, new { @class = "form-select " })
                                            @Html.ValidationMessageFor(model => model.FMonth, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="position-relative form-group">
                                            @Html.LabelFor(model => model.IsFollowUp, htmlAttributes: new { @class = "control-label" })<em>*</em>
                                            <div class="checkbox">
                                                @foreach (var item in CommonModel.GetYesNotrue())
                                                {
                                                    <span class="check-spacer">
                                                        @Html.RadioButtonFor(model => model.IsFollowUp, item.Value, new { id = "IsFollowUp" + item.Value, @required = "required", @class = "Cont" }) @item.Text
                                                    </span>
                                                }
                                                @Html.ValidationMessageFor(model => model.IsFollowUp, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div id="div-fupyes" style="display:none">
                                        <div class="col-sm-12">
                                            @*id="div-IsContraception"*@
                                            <div lass="position-relative form-group">
                                                @Html.LabelFor(model => model.IsContraception, htmlAttributes: new { @class = "control-label" })<em>*</em>
                                                <div class="checkbox">
                                                    @foreach (var item in CommonModel.GetYesNotrue())
                                                    {
                                                        <span class="check-spacer">
                                                            @Html.RadioButtonFor(model => model.IsContraception, item.Value, new { id = "IsContraception" + item.Value, @required = "required" }) @item.Text
                                                        </span>
                                                    }
                                                    @Html.ValidationMessageFor(model => model.IsContraception, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div lass="position-relative form-group" id="div-ContraceptionId_fk" style="display:none;">
                                                @Html.LabelFor(m => m.ContraceptionId_fk, new { @class = "control-label" })<em>*</em>
                                                @Html.DropDownListFor(m => m.ContraceptionId_fk, new List<SelectListItem>(), null, new { @class = "form-select mb-3" })
                                                @Html.ValidationMessageFor(model => model.ContraceptionId_fk, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-12" id="div-ContraceptionOther" style="display:none;">
                                            <div lass="position-relative form-group">
                                                @Html.LabelFor(model => model.ContraceptionOther, htmlAttributes: new { @class = "control-label" })<em>*</em>
                                                @Html.EditorFor(model => model.ContraceptionOther, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ContraceptionOther, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div lass="position-relative form-group" id="div-UseMethodId_fk" style="display:none;">
                                                @Html.LabelFor(m => m.UseMethodId_fk, new { @class = "control-label" })<em>*</em>
                                                @Html.DropDownListFor(m => m.UseMethodId_fk, new List<SelectListItem>(), null, new { @class = "form-select mb-3" })
                                                @Html.ValidationMessageFor(model => model.UseMethodId_fk, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-sm-12" style="display:none;">
                                            <div lass="position-relative form-group">
                                                @Html.LabelFor(m => m.ModuleRollout, new { @class = "control-label" })<em>*</em>
                                                @Html.EditorFor(m => m.ModuleRollout, new { htmlAttributes = new { @class = "form-control col-md-4 numbersOnly", min = "0", oninput = "maxLengthCheck(this)", max = "999", maxlength = "3" } })
                                                @Html.ValidationMessageFor(m => m.ModuleRollout, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-12" >
                                            <div lass="position-relative form-group">
                                                @Html.LabelFor(m => m.ModuleRolloutId_fk, new { @class = "control-label" })<em>*</em>
                                                @Html.DropDownListFor(m => m.ModuleRolloutId_fk, CommonModel.GetModuleRollout(), "Select", new { @class = "form-control col-md-4" })
                                                @Html.ValidationMessageFor(m => m.ModuleRolloutId_fk, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div lass="position-relative form-group">
                                                @Html.LabelFor(m => m.Totalnoof_malechild, new { @class = "control-label" })<em>*</em>
                                                @Html.EditorFor(m => m.Totalnoof_malechild, new { htmlAttributes = new { @class = "form-control col-md-4 numbersOnly", min = "0", maxlength = "2" } })
                                                @Html.ValidationMessageFor(m => m.Totalnoof_malechild, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div lass="position-relative form-group">
                                                @Html.LabelFor(m => m.Totalnoof_Femalechild, new { @class = "control-label" })<em>*</em>
                                                @Html.EditorFor(m => m.Totalnoof_Femalechild, new { htmlAttributes = new { @class = "form-control col-md-4 numbersOnly", minlength = "0", maxlength = "2" } })
                                                @Html.ValidationMessageFor(m => m.Totalnoof_Femalechild, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        @*<button type="button" class="btn btn-primary">Submit</button>*@
                                        <input type="submit" name="btnsubmit" id="btnpopsubmit" class="btn btn-primary" value="Submit" />
                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<div id="div-View">
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/JS/Master.js"></script>

    @*<link href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.min.css" rel="stylesheet" />
        <link href="https://cdn.datatables.net/buttons/2.4.2/css/buttons.dataTables.min.css" rel="stylesheet" />
        <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/buttons/2.4.2/js/dataTables.buttons.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
        <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.html5.min.js"></script>*@

<script>
        $(document).ready(function () {

            GetYearList("Year", 0,1);
            GetMonthList("Month", 0,1);
            GetDistrict("DistrictId", 0);
            $('#DistrictId').change(function () {
                GetBlock("BlockId", 0, $(this).val());
            });
            $('#BlockId').change(function () {
                GetCLF("CLFId", 0, $('#DistrictId').val(), $(this).val());
            });
            $('#CLFId').change(function () {
                GetPanchayat("PanchayatId", 0, $('#DistrictId').val(), $('#BlockId').val(), $(this).val());
            });
            $('#PanchayatId').change(function () {
                GetVillage("VOId", 0, $('#DistrictId').val(), $('#BlockId').val(), $('#CLFId').val(), $(this).val());
            });
            $('#VOId').change(function () {
                GetCMList("CMID", 0, $('#DistrictId').val(), $('#BlockId').val(), $('#CLFId').val(), $('#PanchayatId').val(), $(this).val());
            });
            /* Role Wise */
            BindRolewise("DistrictId", "BlockId","CLFId", "PanchayatId", "VOId", "CMID");

            $("#formid").submit(function (e) {
                e.preventDefault();
                BindData();
            });

            BindData();

            /* Follow-Up Yes/No Function Start Cont */
            $(document).on('change', ".Cont", function () {
                // $('#div-IsContraception').hide();
                HideInput(); $('#div-fupyes').hide();
                var value1 = $('input[name=IsFollowUp]:checked').val();
                if (value1 == "true") {
                    $('#div-IsContraception').show();
                    $('#div-fupyes').show();
                    GetBFYData();
                }
            });

            $(document).on('change', 'input[name=IsContraception]', function () {
                GetContraceptive("ContraceptionId_fk", 0);
                GetContraceptiveChildList("UseMethodId_fk", 0, "");
                $('#div-ContraceptionId_fk').hide();
                $('#div-UseMethodId_fk').hide();
                $('#div-ContraceptionOther').hide();
                $('#ContraceptionOther').val('');
                $('#ContraceptionOther').removeAttr('required');
                $('#ContraceptionId_fk').removeAttr('required');
                $('#UseMethodId_fk').removeAttr('required');

                var value = $('input[name=IsContraception]:checked').val();
                if (value == "true") {
                    $('#div-ContraceptionId_fk').show();
                }
            });

            $(document).on('change', '#ContraceptionId_fk', function () {
                bindloadContraceptive($(this).val());
            });

            $(document).on('submit', "#followupformid", function (e) {
                e.preventDefault();
                CUFollowupBFYData();
            });
            /* Follow-Up Function End */

        });

        function bindloadContraceptive(ContraceptionId_fk, UseMethodId) {
            GetContraceptiveChildList("UseMethodId_fk", 0, "");
            $('#div-UseMethodId_fk').hide();
            $('#div-ContraceptionOther').hide();
            $('#ContraceptionOther').val('');
            $('#ContraceptionOther').removeAttr('required');
            $('#UseMethodId_fk').removeAttr('required');
            GetContraceptiveChildList("UseMethodId_fk", 0, "");
            $('#UseMethodId_fk').removeAttr('required');

            if (ContraceptionId_fk == "1") {
                $('#div-UseMethodId_fk').show();
                GetContraceptiveChildList("UseMethodId_fk", 0, 1);
                $('#UseMethodId_fk').attr('required', 'required');
                $('#div-Isservice').show();
            }
            else if (ContraceptionId_fk == "2") {
                $('#div-UseMethodId_fk').show();
                GetContraceptiveChildList("UseMethodId_fk", 0, 2);
                $('#UseMethodId_fk').attr('required', 'required');
                $('#div-Isservice').show();
            }
            else if (ContraceptionId_fk == "4") {
                $('#ContraceptionOther').attr('required', 'required');
                $('#div-ContraceptionOther').show();
            }
            else {
                $('#div-ContraceptionOther').css('display', 'none');
                $('#div-UseMethodId_fk').css('display', 'none');
            }
            if (UseMethodId != '') {
                $('#UseMethodId_fk').val(UseMethodId);
            }
        }

        function BindData() {
            $("#subdata").html('');
            var cmfollowupmodel = new Object();
            cmfollowupmodel.DistrictId = $('#DistrictId').val() == '' ? '' : $('#DistrictId').val();
            cmfollowupmodel.BlockId = $('#BlockId').val() == '' ? '' : $('#BlockId').val();
            cmfollowupmodel.CLFId = $('#CLFId').val() == '' ? '' : $('#CLFId').val();
            cmfollowupmodel.PanchayatId = $('#PanchayatId').val() == '' ? '' : $('#PanchayatId').val();
            cmfollowupmodel.VoId = $('#VOId').val() == '' ? '' : $('#VOId').val();
            cmfollowupmodel.CMID = $('#CMID').val() == '' ? '' : $('#CMID').val();
            cmfollowupmodel.Year = $('#Year').val() == '' ? '' : $('#Year').val();
            cmfollowupmodel.Month = $('#Month').val() == '' ? '' : $('#Month').val();
            var formData = $('#formid').serialize();

            $.ajax({
                type: "GET",
                url: document.baseURI + "/Beneficiary/GetBFYFollowList",
                data: cmfollowupmodel,//JSON.stringify({ 'Roles': '' }),
                //cache: false,
                success: function (res) {
                    if (res.IsSuccess) {
                        $("#subdata").html(res.Data);

                        if ($.fn.dataTable.isDataTable('#tbl')) {
                            $("#tbl").dataTable().fnDestroy();
                        }
                        table = $('#tbl').DataTable({
                            //scrollY: "400px",
                            //scrollX: true,
                            //scrollCollapse: true,
                            //paging: false,
                            pageLength: 100,
                            fixedColumns: {
                                leftColumns: 1,
                                rightColumns: 1
                            },
                            buttons: [{
                                extend: 'excel', text: '<span><i class="fa fa-download"></i>Export</span>', title: 'Beneficiary Lists',//$('#IDDistrict option:selected').text() +
                                className: 'btn btn-primary button-icon mr-3 mt-1 mb-1',
                                filename: 'Beneficiary List',
                                exportOptions: { modifier: { page: 'all' } }
                            }],
                        });
                        $('.dataTables_filter input[type="search"]').css(
                            { 'width': '500px', 'display': 'inline-block' }
                        );
                        $('#div-download').empty();
                        table.buttons().container().appendTo($('#div-download'));
                    }
                    else {
                        $("#subdata").html(res.Data);
                        toastr.error("Error", res.Message);
                    }
                },
                error: function (req, error) {
                    if (error === 'error') { error = req.statusText; }
                    var errormsg = 'There was a communication error: ' + error;
                    //Do To Message display
                }
            });
        }

        function HideInput() {
            GetContraceptive("ContraceptionId_fk", 0);
            GetContraceptiveChildList("UseMethodId_fk", 0, "");
            $("input[name=IsContraception]").prop('checked', false);
            $('#div-IsContraception').hide();
            $('#div-ContraceptionId_fk').hide();
            $('#div-UseMethodId_fk').hide();
            $('#div-ContraceptionOther').hide();
            $('#ContraceptionOther').val('');
            $('#ContraceptionOther').removeAttr('required');
            $('#ContraceptionId_fk').removeAttr('required');
            $('#UseMethodId_fk').removeAttr('required');
            $('#ModuleRollout').val('');
            $('#ModuleRolloutId_fk').val('');
            $('#Totalnoof_malechild').val('');
            $('#Totalnoof_Femalechild').val('');
        }
        function BindFollowupPop(BFYID_fk, BFYRegID) {
            $("#stBFYRegID").html(BFYRegID);
            $('#myModal').modal('show');
            HideInput(); $('#div-fupyes').hide();
            $("#followupformid")[0].reset();
            GetContraceptive("ContraceptionId_fk", 0);
            $('#BFYID_fk').val(BFYID_fk);
            setTimeout(function () {
                GetYearList("FYear", 0);
                GetMonthList("FMonth", 0);
            }, 500);
            //$('#myModal').modal(); $('#myModal').modal('toggle');
        }
        function GetBFYData() {
            var BFYID_fk = $('#BFYID_fk').val();
            if (BFYID_fk != '' && BFYID_fk != undefined) {
                $.get("/Beneficiary/GetBFYIDWise", { BFYPKID: BFYID_fk }, function (res) {
                    if (res!='') {
                        var data = res.resData;
                        $('#div-fupyes').show();
                        $('input[name=IsContraception][value=true]').prop('checked', true);
                        if ($('input[name="IsContraception"]:checked').val() == "true") {
                            $('#div-ContraceptionId_fk').show();
                            $('#ContraceptionId_fk').val(data.Q15);
                            var usemd = data.Q15 == '@((int)Enums.eContraceptive.Temporary)'
                                ? data.Q16 : data.Q15 == '@((int)Enums.eContraceptive.Permanent)'
                                    ? data.Q17 : data.Q15 == '@((int)Enums.eContraceptive.OtherMethod)'
                                        ? data.Q18 : "";
                            bindloadContraceptive(data.Q15.toString(), usemd);
                        }
                        $('#ModuleRollout').val(data.Q20);
                        $('#ModuleRolloutId_fk').val(data.Q21);
                        $('#Totalnoof_malechild').val(data.Q10);
                        $('#Totalnoof_Femalechild').val(data.Q11);
                    }
                });
            }
        }
        function DisplayPOP(BFYID_fk, BFYRegID) {
            if (BFYID_fk) {
                BindFollowupPop(BFYID_fk, BFYRegID);
            }
        }
        function CUFollowupBFYData() {
            debugger;
            //var vl = $.validator.unobtrusive.parse("#formid");
            //var Isvalid= $("#formid").validate();//CreatePlanformid
            var isvalid = $("#followupformid").valid();
            var IsCheck = true;
            IsCheck = $('#BFYID_fk').val() == '' ? false : true;
            //if ($('input[name="IsFollowUp"]:checked').length == 0) {
            //    toastr.error("Error", 'Please Select FollowUp/HV in Current Month');
            //    IsCheck = false;
            //}

            if ($('input[name="IsContraception"]:checked').length == 0) {
                toastr.error("Error", 'Please Select Want to use contraception after meeting/HV');
                IsCheck = false;
            }

            if (isvalid && IsCheck) {
                document.getElementById("btnpopsubmit").disabled = true;

                var formData = $('#followupformid').serialize();

                $.ajax({
                    url: document.baseURI + "/Beneficiary/AddFollowup",
                    type: "Post",
                    data: formData,
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    // processData: false, contentType: false,
                    //cache: false,
                    //contentType: false,
                    //processData: false,
                    //data: JSON.stringify(model),
                    success: function (resp) {
                        if (resp.StatusType == "success") {
                            toastr.success("Success", resp.Message);
                            //$("#followupformid")[0].reset();
                            BindData();
                            document.getElementById("btnpopsubmit").disabled = false;
                        }
                        else {
                            document.getElementById("btnpopsubmit").disabled = false;
                            toastr.error("Error", resp.Message);
                            return false;
                        }
                    },
                    error: function (req, error) {
                        if (error === 'error') { error = req.statusText; }
                        var errormsg = 'There was a communication error: ' + error;
                        toastr.error("Error", errormsg);
                        document.getElementById("btnpopsubmit").disabled = false;
                        //jQuery.event.trigger("ajaxStop");
                        return false;
                    }
                });
            }
            else {
                return false;
            }

        }

</script>
}

